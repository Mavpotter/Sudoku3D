digraph G {
    fontname = "Bitstream Vera Sans"
    fontsize = 8

    node [
        fontname = "Bitstream Vera Sans"
        fontsize = 10
        shape = none width=0 height=0 margin=0
    ]

    edge [
        fontname = "Bitstream Vera Sans"
        fontsize = 10
    ]

    subgraph packagemodel{

        sudoku3dfactory [
            label =
            <<table border="0" cellspacing="0" cellborder="1">
                <tr>
                    <td>Sudoku3DFactory</td>
                </tr>
                <tr>
                    <td>
                    </td>
                </tr>
                <tr>
                    <td>
                        <table border="0" cellspacing="0" cellborder="0">
                            <tr><td align="left"><u>+ createSudoku3D(int type): Sudoku3D</u></td></tr>
                            <tr><td align="left">- init(Sudoku3D sudoku3D): void</td></tr>
                            <tr><td align="left">- insertSomeNumbers(Sudoku3D sudoku3D): void</td></tr>
                        </table>
                    </td>
                </tr>
            </table>>
        ]

        sudoku3d [
            label =
            <<table border="0" cellspacing="0" cellborder="1">
                <tr>
                    <td><i>Sudoku3D</i></td>
                </tr>
                <tr>
                    <td>
                        <table border="0" cellspacing="0" cellborder="0">
                            <tr><td align="left"># units: Field[][]</td></tr>
                            <tr><td align="left"># sudoku3D: Field[][][]</td></tr>
                        </table>
                    </td>
                </tr>
                <tr>
                    <td>
                        <table border="0" cellspacing="0" cellborder="0">
                            <tr><td align="left">+ isSolved(): boolean</td></tr>
                            <tr><td align="left">+ getWrongEntries(): int[][]</td></tr>
                            <tr><td align="left">+ clear(): void</td></tr>
                            <tr><td align="left">+ insert(int x, int y, int z, int n): void</td></tr>
                            <tr><td align="left"># noDuplicatesInUnitFromField(Field f): boolean</td></tr>
                            <tr><td align="left"># unitsCorrectlyFilled(): boolean</td></tr>
                            <tr><td align="left">- noDuplicatesInUnit(Field[] u): boolean</td></tr>
                            <tr><td align="left">- unitCorrectlyFilled(Field[] u): boolean</td></tr>
                        </table>
                    </td>
                </tr>
            </table>>
        ]

        field [
            label =
            <<table border="0" cellspacing="0" cellborder="1">
                <tr>
                    <td>Field</td>
                </tr>
                <tr>
                    <td>
                        <table border="0" cellspacing="0" cellborder="0">
                            <tr><td align="left">- isChangable: boolean</td></tr>
                            <tr><td align="left">- x: int</td></tr>
                            <tr><td align="left">- y: int</td></tr>
                            <tr><td align="left">- z: int</td></tr>
                            <tr><td align="left">- correctInput: int</td></tr>
                            <tr><td align="left">- userInput: int</td></tr>
                            <tr><td align="left">- ownUnits: Field[][]</td></tr>
                        </table>
                    </td>
                </tr>
                <tr>
                    <td>
                        <table border="0" cellspacing="0" cellborder="0">
                            <tr><td align="left">+ Field(int x, int y, int z)</td></tr>
                            <tr><td align="left"># insert(int n): boolean</td></tr>
                            <tr><td align="left"># isCorrectlyFilled(): boolean</td></tr>
                            <tr><td align="left"># getUnits(): Field[][]</td></tr>
                            <tr><td align="left"># getUserInput(): int</td></tr>
                            <tr><td align="left"># getCoordsAsArray(): int[]</td></tr>
                        </table>
                    </td>
                </tr>
            </table>>
        ]

        basicsudoku3d [
            label =
            <<table border="0" cellspacing="0" cellborder="1">
                <tr>
                    <td>BasicSudoku3D</td>
                </tr>
                <tr>
                    <td>
                    </td>
                </tr>
                <tr>
                    <td>
                    </td>
                </tr>
            </table>>
        ]

        sudoku3dfactory -> sudoku3d
        field -> sudoku3d [arrowhead=diamond]
        basicsudoku3d -> sudoku3d [arrowhead=onormal]
    }
}
